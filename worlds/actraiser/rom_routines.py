LEVELUP_CHECKS = bytearray([
        0xDA, 
        0x8B, 
        0xA9, 0x7E, 0x00, 
        0x48, 
        0xAB, 
        0xAD, 0x40, 0x1A, 
        0x3A, 
        0xAA, 
        0x1A, 
        0x1A, 
        0x8D, 0x40, 0x1A, 
        0xA9, 0x01, 0x00, 
        0xE0, 0x00, 0x00, 
        0xF0, 0x04, 
        0x0A, 
        0xCA, 
        0x80, 0xF7, 
        0x0D, 0x10, 0x1A, 
        0x8D, 0x10, 0x1A, 
        0xAB, 
        0xAB, 
        0xFA, 
        0xC2, 0x20, 
        0xE8, 
        0xE8, 
        0xBF, 0x0E, 0xB4, 0x03, 
        0x28, 
        0x18, 
        0x60
])

ITEM_HANDLE =  bytearray([
        0x22, 0x56, 0xBC, 0x02, 	#	JSL $02BC56
        0x08, 	#	PHP
        0xE2, 0x30, 	#	SEP #$30 ;8bit AXY
        0x48, 	#	PHA
        0xDA, 	#	PHX
        0xAD, 0x08, 0x1A, 	#	LDA $1A08
        0x8D, 0x0E, 0x1A, 	#	STA $1A0E
        0xF0, 0x0E, 	#	BEQ return
        0x0A, 	#	ASL
        0xAA, 	#	TAX
            #	
        0xFC, 0x00, 0x85, 	#	JSR ($8500, X)
        0xA9, 0x1C, 	#	LDA #$1C
        0x02, 0x00, 	#	COP #$00
        0x20, 0x60, 0x8A, 	#	JSR $8A60
        0x80, 0x0F, 	#	BRA returnmain
            #	return:
        0xAD, 0x09, 0x1A, 	#	LDA $1A09
        0xF0, 0x0A, 	#	BEQ returnmain
        0xC9, 0x01, 	#	CMP #$01
        0xF0, 0x03, 	#	BEQ cleartext
        0x3A, 	#	DEC
        0x80, 0x03, 	#	BRA returnmain
            #	cleartext:
        0x20, 0xA0, 0x8A, 	#	JSR $8AA0
            #	returnmain:
        0x8D, 0x09, 0x1A, 	#	STA $1A09
        0x9C, 0x08, 0x1A, 	#	STZ $1A08
        0xAD, 0x0C, 0x1A, 	#	LDA $1A0C
        0xD0, 0x0D, 	#	BNE nx
            #	
        0x9C, 0x0D, 0x1A, 	#	STZ $1A0D
        0xAD, 0x0A, 0x1A, 	#	LDA $1A0A
        0x29, 0x02, 	#	AND #$02
        0xF0, 0x09, 	#	BEQ exit
        0x20, 0x90, 0x80, 	#	JSR $8090
            #	nx:
        0xCE, 0x0C, 0x1A, 	#	DEC $1A0C
        0x9C, 0x0A, 0x1A, 	#	STZ $1A0A
            #	exit:
        0xFA, 	#	PLX
        0x68, 	#	PLA
        0x28, 	#	PLP
        0x6B,	#	RTL


    ])

ITEM_TEXT_HANDLE = bytearray([
        0x8B, 	#	  PHB
        0xA9, 0x1F, 	#	  LDA #$1F
        0x48, 	#	  PHA
        0xAB, 	#	  PLB
        0xC2, 0x30, 	#	  REP #$30
        0xA0, 0x00, 0x9A, 	#	  LDY #$9A00
        0xA9, 0x01, 0x1A, 	#	  LDA #$1A01
        0x22, 0x60, 0xBF, 0x02, 	#	  JSL $02BF60
        0xAD, 0x0E, 0x1A, 	#	  LDA $1A0E
        0x0A, 	#	  ASL
        0x0A, 	#	  ASL
        0x0A, 	#	  ASL
        0x0A, 	#	  ASL
        0x0A, 	#	  ASL
        0x18, 	#	  CLC
        0x69, 0x00, 0x90, 	#	  ADC #$9000
        0xA8, 	#	  TAY
        0xA9, 0x09, 0x1A, 	#	  LDA #$1A09
        0x22, 0x60, 0xBF, 0x02, 	#	  JSL $02BF60
        0xAB, 	#	  PLB
        0xE2, 0x30, 	#	  SEP #$30
        0xA9, 0xA0,     #   LDA #$A0
        0x8D, 0x09, 0x1A, #  STA $1A09
        0x60,	#	  RTS

    ])

CLEAR_TEXT = bytearray([
        0x8B, 	#	  PHB
        0xA9, 0x1F, 	#	  LDA #$1F
        0x48, 	#	  PHA
        0xAB, 	#	  PLB
        0xC2, 0x30, 	#	  REP #$30
        0xA0, 0x00, 0x90, 	#	  LDY #$9000
        0xA9, 0x01, 0x1A, 	#	  LDA #$1A01
        0x22, 0x60, 0xBF, 0x02, 	#	  JSL $02BF60
        0xAB, 	#	  PLB
        0xE2, 0x30, 	#	  SEP #$30
        0xA9, 0x00,     # LDA #$00
        0x60, 	#	  RTS

    ])

DEATH_LINK =  bytearray([
        0xA9, 0xB4, 	#	LDA #$FF
        0x8D, 0x0C, 0x1A, 	#	STA $1A0C
        0xA5, 0x18, 	#	LDA $18
        0xF0, 0x07, 	#	BEQ angel_dl
            #	
        0xA9, 0x53, 	#	LDA #$53
        0x8D, 0xD0, 0x08, 	#	STA $08D0
        0x80, 0x09, 	#	BRA return
            #	
            #	angel_dl:
        0xA9, 0x00, 	#	LDA #$00
        0x8D, 0x86, 0x02, 	#	STA $0286
        0xA9, 0x07,     # LDA #$07
        0x85, 0x1A,     # STA $1A
            #	
            #	return:
        0xAD, 0x0A, 0x1A, 	#	LDA $1A0A
        0x29, 0x01, 	#	AND #$01
        0x8D, 0x0A, 0x1A, 	#	STA $1A0A
        0x60, 	#	RTS

    ])

SEND_DEATH_LINK = bytearray([
        0x09, 0x40, 0x00, 	#	  ORA #$0040
        0x9D, 0x30, 0x00, 	#	  STA $0030,X
        0x48, 	#	  PHA
        0xE2, 0x20, 	#	  SEP #$20 ;8bit A
        0xAD, 0x0C, 0x1A, 	#	  LDA $1A0C
        0x25, 0x1D, 	#	  AND $1D ;Make HP and Death timer is 0
        0xD0, 0x09, 	#	  BNE return
        0x1A, 	#	  INC
        0x8D, 0x0D, 0x1A, 	#	  STA $1A0D ;Local Death
        0xA9, 0x09, 	#	  LDA #$F0
        0x8D, 0x0C, 0x1A, 	#	  STA $1A0C
        0xC2, 0x20, 	#	  REP #$20
        0x68, 	#	  PLA
        0x6B,	#	  RTL
    ])

ITEM_ROUTINES = bytearray([
        0x60, 0xA2, 0x00, 0xBD, 0x99, 0x02, 0xF0, 0x03, 0xE8, 0x80, 0xF8, 0xAD, 0x0E, 0x1A, 0x9D, 0x99,
        0x02, 0x60, 0xEE, 0x45, 0x1A, 0x60, 0xEA, 0xEA, 0xAD, 0xAB, 0x02, 0x1A, 0x8D, 0xAB, 0x02, 0x60,
        0xAD, 0x95, 0x02, 0x1A, 0x8D, 0x95, 0x02, 0xA5, 0x21, 0x1A, 0x85, 0x21, 0x60, 0xEA, 0xEA, 0xEA,
        0xA2, 0x00, 0xBD, 0xA2, 0x02, 0xF0, 0x03, 0xE8, 0x80, 0xF8, 0xAD, 0x0E, 0x1A, 0x9D, 0xA2, 0x02,
        0x60, 0xEA, 0xEA, 0xEA, 0xEA, 0xEA, 0xEA, 0xAD, 0x91, 0x02, 0x0A, 0xAA, 0xAD, 0x91, 0x02, 0x1A, 
        0x8D, 0x91, 0x02, 0xA5, 0x1E, 0xC9, 0x18, 0xB0, 0x18, 0x1A, 0x85, 0x1E, 0x8D, 0x87, 0x02, 0xAD,
        0x86, 0x02, 0x1A, 0x8D, 0x86, 0x02, 0xC2, 0x20, 0xBF, 0x32, 0xB4, 0x03, 0x8D, 0x84, 0x02, 0xE2,
        0x20, 0x60, 0xA5, 0x1E, 0x85, 0x1D, 0xAD, 0x87, 0x02, 0x8D, 0x86, 0x02, 0x60, 0xEA, 0xEA, 0xEA,
        0xAD, 0x0E, 0x1A, 0x38, 0xE9, 0x20, 0xAA, 0xA9, 0x01, 0xE0, 0x00, 0xF0, 0x04, 0x0A, 0xCA, 0x80,
        0xF8, 0x0D, 0x44, 0x1A, 0x8D, 0x44, 0x1A, 0x60,
    ])

GET_MAGIC = bytearray([
        0xA2, 0x00, 	#	    LDX #$00
	        #	  nextspell:
        0xBD, 0x99, 0x02, 	#	  LDA $0299,X
        0xCD, 0x0E, 0x1A, 	#	  CMP $1A0E
        0xF0, 0x1B, 	#	  BEQ return ;Already have spell
        0xE8, 	#	  INX
        0xE0, 0x04, 	#	  CPX #$04
        0xF0, 0x02, 	#	  BEQ findslot
        0x80, 0xF1, 	#	  BRA nextspell
            #	  findslot:
        0xA2, 0x00, 	#	  LDX #$00
            #	  nextslot:
        0xBD, 0x99, 0x02, 	#	  LDA $0299,X
        0xF0, 0x07, 	#	  BEQ foundslot
        0xE8, 	#	  INX
        0xE0, 0x04, 	#	  CPX #$04
        0xF0, 0x08, 	#	  BEQ return
        0x80, 0xF4, 	#	  BRA nextslot
            #	  foundslot:
        0xAD, 0x0E, 0x1A, 	#	  LDA $1A0E
        0x9D, 0x99, 0x02, 	#	  STA $0299,X
            #	  return:
        0x60	#	  RTS
    ])

GET_OFFERING =  bytearray([
        0xA2, 0x00, 	#	  LDX #$00
            #	  nextslot:
        0xBD, 0xA2, 0x02, 	#	  LDA $02A2,X
        0xF0, 0x07, 	#	  BEQ foundslot
        0xE8, 	#	  INX
        0xE0, 0x08, 	#	  CPX #$08
        0xF0, 0x09, 	#	  BEQ noslots
        0x80, 0xF4, 	#	  BRA nextslot
            #	  foundslot:
        0xAD, 0x0E, 0x1A, 	#	  LDA $1A0E
        0x9D, 0xA2, 0x02, 	#	  STA $02A2,X
            #	  toobad:
        0x60, 	#	  RTS
            #	  noslots:
        0xA2, 0x00, 	#	  LDX #$00
            #	  nextexslot:
        0xBD, 0x30, 0x1A, 	#	  LDA $1A30, X
        0xF0, 0x07, 	#	  BEQ foundexslot
        0xE8, 	#	  INX
        0xE0, 0x0F, 	#	  CPX #$0F
        0xF0, 0xF3, 	#	  BEQ toobad
        0x80, 0xF4, 	#	  BRA nextexslot
            #	  foundexslot:
        0xAD, 0x0E, 0x1A, 	#	  LDA $1A0E
        0x9D, 0x30, 0x1A, 	#	  STA $1A30, X
        0x60,	#	  RTS

    ])
BACKUP_INVENTORY =  bytearray([
        0xA9, 0x07, 	#	  LDA #$07
        0x02, 0x00, 	#	  COP #$00
        0xAD, 0x30, 0x1A, 	#	  LDA $1A30
        0xD0, 0x01, 	#	  BNE findslot
        0x6B, 	#	  RTL
            #	  findslot:
        0xDA, 	#	  PHX
        0xA2, 0x00, 0x00, 	#	  LDX #$0000
            #	  nextslot:
        0xBD, 0xA2, 0x02, 	#	  LDA $02A2, X
        0xF0, 0x08, 	#	  BEQ foundslot
        0xE8, 	#	  INX
        0xE0, 0x08, 0x00, 	#	  CPX #$0008
        0xF0, 0x19, 	#	  BEQ xreturn
        0x80, 0xF3, 	#	  BRA nextslot
            #	  foundslot:
        0xAD, 0x30, 0x1A, 	#	  LDA $1A30
        0x9D, 0xA2, 0x02, 	#	  STA $02A2, X
        0xA2, 0x00, 0x00, 	#	  LDX #$0000
            #	  cyclebackup:
        0xBD, 0x31, 0x1A, 	#	  LDA $1A31,X
        0x9D, 0x30, 0x1A, 	#	  STA $1A30,X
        0xE8, 	#	  INX
        0xE0, 0x0F, 0x00, 	#	  CPX #$000F
        0xF0, 0x02, 	#	  BEQ xreturn
        0x80, 0xF2, 	#	  BRA cyclebackup
            #	  xreturn:
        0xFA, 	#	  PLX
        0x6B,	#	  RTL

    ])
GET_CIVLEVEL = bytearray([
        0xAD, 0x0E, 0x1A, 	# LDA $1A0E
        0x38, 	            # SEC
        0xE9, 0x18, 	    # SBC #$18
        0x0A, 	            # ASL
        0xAA, 	            # TAX
        0xBD, 0x2E, 0x02,   # LDA $022E,X
        0x1A,               # INC

        0xC9, 0x03,         # CMP #$03
        0x90, 0x02,         # BCC store
        0xA9, 0x03,         # LDA #$03
        0x9D, 0x2E, 0x02,   # STA $022E,X
        0x60,	            # RTS
    ])
GET_FLAMESWORD = bytearray([
        0xA9, 0x80,         # LDA #$80
        0x8D, 0x4A, 0x1A,   # STA $1A4A
        0x60                # RTS
    ])
USE_FLAMESWORD = bytearray([
        0xAD, 0x4A, 0x1A, 	#	  LDA $1A4A
        0xD0, 0x05, 	#	  BNE return
        0xA5, 0xE4, 	#	  LDA $E4
        0x29, 0xFF, 0x00, 	#	  AND #$00FF
            #	  return:
        0x6B	#	  RTL

    ])

GET_ARROW =  bytearray([0xEE, 0x45, 0x1A, 0x60]) #$INC $1A45

GET_CRYSTAL = bytearray([
        #0x8B, 	#	PHB
        #0xA9, 0x1F, 	#	LDA #$1F
        #0x48, 	#	PHA
        #0xAB, 	#	PLB
        0xAD, 0x48, 0x1A, 	#	LDA $1A48
        0x1A, 	#	INC
        0x8D, 0x48, 0x1A, 	#	STA $1A48
        0xCF, 0x06, 0x80, 0x1F, 	#	CMP $1F8004
        0x90, 0x0B, 	#	BCC return
        0xA9, 0x01, # LDA #$01
        0x0D, 0x2F, 0x1A, # ORA $1A2F
        0x8D, 0x2F, 0x1A, # STA $1A2F
        0x20, 0xC0, 0x83, # JSR $83C0
        #0xAF, 0x01, 0x91, 0x7F, 	#	LDA $7F9101
        #0x09, 0x03, 	#	ORA #$03
        #0x8F, 0x01, 0x91, 0x7F, 	#	STA $7F9101

        #0xAB, 	#	PLB
        0x60	#	RTS

    ])

GET_1UP =  bytearray([
        0xA5, 0x18,  # LDA $18
        0xF0, 0x03,  # BEQ insim
        0xE6, 0x1C,  # INC $1C
        0x60, # RTS
        0xEE, 0x66, 0x1A, # INC $1A66
        0x60,  # RTS
        ])
GET_MAGIC = bytearray([        
        0xA5, 0x18,  # LDA $18
        0xF0, 0x03,  # BEQ insim
        0xE6, 0x21,  # INC $1C
        0x60, # RTS
        0xEE, 0x67, 0x1A, # INC $1A67
        0x60,  # RTS
        ])
GET_POINTS =  bytearray([
        0xA5, 0x18,	#	  LDA $18
        0xF0, 0x19,	#	  BEQ $1F81F1
        0xA5, 0x20,	#	  LDA $20
        0x29, 0x0F,	#	  AND #$0F
        0xF0, 0x0D,	#	  BEQ $1F81EB
        0xC9, 0x09,	#	  CMP #$09
        0x90, 0x09,	#	  BCC $1F81EB
        0xA5, 0x20,	#	  LDA $20
        0x29, 0xF0,	#	  AND #$F0
        0x18,	#	  CLC
        0x69, 0x10,	#	  ADC #$10
        0x80, 0x03,	#	  BRA $1F81EE
        0xA5, 0x20,	#	  LDA $20
        0x1A,	#	  INC
        0x85, 0x20,	#	  STA $20
        0x60,	#	  RTS
        0xAD, 0x41, 0x03,	#	  LDA $0341
        0xF0, 0x01,	#	  BEQ $1F81F7
        0x3A,	#	  DEC
        0x0A,	#	  ASL
        0x0A,	#	  ASL
        0xAA,	#	  TAX
        0xBD, 0xB4, 0x02,	#	  LDA $02B4,X
        0x29, 0x0F,	#	  AND #$0F
        0xF0, 0x0E,	#	  BEQ $1F820F
        0xC9, 0x09,	#	  CMP #$09
        0x90, 0x0A,	#	  BCC $1F820F
        0xBD, 0xB4, 0x02,	#	  LDA $02B4,X
        0x29, 0xF0,	#	  AND #$F0
        0x18,	#	  CLC
        0x69, 0x10,	#	  ADC #$10
        0x80, 0x04,	#	  BRA $1F8213
        0xBD, 0xB4, 0x02,	#	  LDA $02B4,X
        0x1A,	#	  INC
        0x9D, 0xB4, 0x02,	#	  STA $02B4,X
        0x60,	#	  RTS

    ])

GET_SMITE = bytearray([
        0xA5, 0x18, 	#	  LDA $18
        0xD0, 0x26, 	#	  BNE return
        0xC2, 0x30, 	#	  REP #$30
        0xA2, 0x30, 0x0B, 	#	  LDX #$0B30
        0xA0, 0x04, 0x00, 	#	  LDY #$0004
            #	 lb2:
        0xBD, 0x10, 0x00, 	#	  LDA $0010,X
        0x89, 0x02, 0xC0, 	#	  BIT #$C002
        0xD0, 0x0B, 	#	  BNE lb1
        0xA9, 0x0F, 0x00, 	#	  LDA #$000F
        0x9D, 0x12, 0x00, 	#	  STA $0012,X
        0x8A, 	#	  TXA
        0x18, 	#	  CLC
        0x69, 0x26, 0x00, 	#	  ADC #$0026
            #	 lb1:
        0xAA, 	#	  TAX
        0x88, 	#	  DEY
        0xD0, 0xE9, 	#	  BNE lb2
        0xA9, 0x8E, 0x00, 	#	  LDA #$008E
        0x02, 0x00, 	#	  COP #$00
        0xE2, 0x30, 	#	  SEP #$30
            #	  return:
        0x60,	#	  RTS

    ])

GET_BOOM = bytearray([
        0xAD, 0x41, 0x03, 	#	LDA $0341
        0xF0, 0x02, 	#	BEQ addsouls
        0x3A, 	#	DEC
        0x0A, 	#	ASL
            #	addsouls:
        0xAA, 	#	TAX
        0xC2, 0x20, 	#	REP #$20
        0xBF, 0xFA, 0x9E, 0x7F, 	#	LDA $7F9EFA, X
        0x18, 	#	CLC
        0x69, 0x50, 0x00, 	#	ADC #$0050
        0x9F, 0xFA, 0x9E, 0x7F, 	#	STA $7F9EFA, X
            #	
        0xE2, 0x20, 	#	SEP #$20
        0x60, 	#	RTS

    ])

GET_SKULLTRAP = bytearray([
        0xA5, 0x18,     # LDA $18
        0xD0, 0x2B,     # BNE Return
        0xC2, 0x30, 	#	  REP #$30
        0xA2, 0x36, 0x0B, 	#	  LDX #$0B36
        0xA0, 0x08, 0x00, 	#	  LDY #$0008
        0xA9, 0x0B, 0x10, 	#	  LDA #$100B
        0x9D, 0x00, 0x00, 	#	  STA $0000,X
        0xA9, 0x87, 0xE7, 	#	  LDA #$E787
        0x9D, 0x02, 0x00, 	#	  STA $0002,X
        0xA9, 0x15, 0x00, 	#	  LDA #$0015
        0x9D, 0x08, 0x00, 	#	  STA $0008,X
        0xC0, 0x00, 0x00, 	#	  CPY #$0000
        0xF0, 0x0A, 	#	  BEQ $1F8A59
        0x88, 	#	  DEY
        0x88, 	#	  DEY
        0x8A, 	#	  TXA
        0x18, 	#	  CLC
        0x69, 0x26, 0x00, 	#	  ADC #$0026
        0xAA, 	#	  TAX
        0x80, 0xDF, 	#	  BRA $1F8A38
        0xE2, 0x30, 	#	  SEP #$30
        0x60, 	#	  RTS

    ])

GET_REDIRECT = bytearray([
        0x5A, 	#	  PHY
        0xA2, 0x00, 	#	  LDX #$00
            #	  nextoutter:
        0xA9, 0x08, 	#	  LDA #$08
        0x9F, 0x12, 0x9F, 0x7F, 	#	  STA $7F9F12,X
        0xA0, 0x09, 	#	  LDY #$09
            #	  nextinner:
        0xB9, 0xE5, 0x01, 	#	  LDA $01E5,Y
        0x29, 0x03, 	#	  AND #$03
        0x9F, 0x13, 0x9F, 0x7F, 	#	  STA $7F9F13,X
        0xE8, 	#	  INX
        0x88, 	#	  DEY
        0xD0, 0xF3, 	#	  BNE nextinner
        0xE0, 0x30, 	#	  CPX #$30
        0x90, 0xE7, 	#	  BCC nextoutter
        0x7A, 	#	  PLY
        0x60, 	#	  RTS
    ])

GET_LIGHTNING = bytearray([
        0xA0, 0x00, 0x00, 	# LDY #$0000
        0x22, 0x00, 0x86, 0x1F, 	# JSL $1F8600
        0xC9, 0x00, 	    # CMP #$00
        0xD0, 0x42, 	    # BNE $0182E9
        0xEA, 	            # NOP                     
        0xEA,	            # NOP
    ])
GET_RAIN = bytearray([
        0xA0, 0x01, 0x00, 	# LDY #$0001
        0x22, 0x00, 0x86, 0x1F, # JSL $1F8600
        0xC9, 0x00, 	    # CMP #$00
        0xD0, 0x42, 	    # BNE $0182E9
        0xEA, 	            # NOP                      
        0xEA,	            # NOP
    ])
GET_SUN = bytearray([
        0xA0, 0x02, 0x00, 	# LDY #$0002
        0x22, 0x00, 0x86, 0x1F, # JSL $1F8600
        0xC9, 0x00, 	    # CMP #$00
        0xD0, 0x42, 	    # BNE $0182E9
        0xEA, 	            # NOP                      
        0xEA,	            # NOP
    ])
GET_WIND = bytearray([
        0xA0, 0x03, 0x00, 	# LDY #$0003
        0x22, 0x00, 0x86, 0x1F, # JSL $1F8600
        0xC9, 0x00, 	    # CMP #$00
        0xD0, 0x37, 	    # BNE $0182E9
        0xEA, 	            # NOP                      
        0xEA,	            # NOP
    ])
GET_QUAKE = bytearray([
        0xA0, 0x04, 0x00, 	# LDY #$0003
        0x22, 0x00, 0x86, 0x1F, # JSL $1F8600
        0xC9, 0x00, 	    # CMP #$00
        0xD0, 0x37, 	    # BNE $0182E9
        0xEA, 	            # NOP                      
        0xEA,	            # NOP
    ])
CHECK_MIRACLE = bytearray([
        0x8B, 	#	  PHB
        0xA9, 0x1F, 	#	  LDA #$1F
        0x48, 	#	  PHA
        0xAB, 	#	  PLB
        0xAD, 0x44, 0x1A, 	#	  LDA $1A44
        0x39, 0xEA, 0x85, 	#	  AND $85EA,Y
        0xD9, 0xEA, 0x85, 	#	  CMP $85EA,Y
        0xF0, 0x07, 	#	  BEQ $1F8617
        0xA0, 0x83, 0xF2, 	#	  LDY #$F283
        0xA9, 0x01, 	#	  LDA #$01
        0x80, 0x1C, 	#	  BRA $1F8630
        0xC2, 0x20, 	#	  REP #$20
        0x98, 	#	  TYA
        0x0A, 	#	  ASL
        0xA8, 	#	  TAY
        0xAF, 0x82, 0x02, 0x7E, 	#	  LDA angel_SP
        0xD9, 0xE0, 0x85, 	#	  CMP $85E0,Y
        0xE2, 0x20, 	#	  SEP #$20
        0x90, 0x04, 	#	  BCC needsp
        0xA9, 0x00, 	#	  LDA #$00
        0x80, 0x08, 	#	  BRA exit
            #	  needsp:
        0xDA, 	#	  PHX
        0xBB, 	#	  TYX
        0xBC, 0xF0, 0x85, 	#	  LDY $85F0,X
        0xA9, 0x01, 	#	  LDA #$01
        0xFA, 	#	  PLX
            #	  exit:
        0xAB, 	#	  PLB
        0x6B,	#	  RTL
    ])
SP_COST = bytearray([
        0xCE, 0xFC, 0x6F, 0xFD, 0x0C, 0xFF, 0xE2, 0xFD, 0x6A, 0xFE, 0xCE, 0xFC, 0xCE, 0xFC, 0xCE, 0xFC,
    ])

WHEAT = bytearray([
        0xC9, 0x08, # CMP #$08
        0xF0, 0x09, # BEQ $1F8649
        0xC9, 0x13, # CMP #$13
        0xF0, 0x05, # BEQ $1F8649
        0xA9, 0x00, # LDA #$00
        0x99, 0x00, 0x00, # STA $0000,Y
        0x6B, # RTL
        ])
MAGIC_LOCS =  bytearray([
        0xA9, 0x01, 		# LDA #$01
        0xAC, 0x41, 0x03,  	# LDY $0341
        0x88,  				# DEY
        0xF0, 0x03,  		# BEQ $019CE1
        0x0A,  				# ASL
        0x80, 0xFA,  		# BRA $019CDB
        0x0D, 0x1C, 0x1A,  	# ORA $1A1C
        0x8D, 0x1C, 0x1A,  	# STA $1A1C
        0xEA, 				# NOP
    ])
KEY_ITEM_CHECK = bytearray([
        0xC9, 0x10,             #CMP #$10
        0xB0, 0x05,             #BCS jmpgetoff
        0x22, 0x00, 0x87, 0x1F, #JSL $1F8700 Jump to key item check routine
        0x60,                   #RTS
        0x22, 0x30, 0x87, 0x1F, #JSL $1F8730 Jump to offering check routine
        0x60                    #RTS
    ])
KEY_ITEM_CHECK2 = bytearray([
        0x08,		 	#PHP
        0x5A,           #PHY
        0xDA,           #PHX
        0x48,           #PHA 
        0xC2, 0x20,     #REP #$20
        0xA9, 0x00, 0x00, #LDA #$0000
        0xAA,           #TAX
        0xE2, 0x20,     #SEP #$20
        0x68,           #PLA

        0xC9, 0x0D,     #CMP #$0D
        0x90, 0x01,     #BCC cnt1
        0x3A,           #DEC

        0x38,			#SEC
        0xE9, 0x07,	 	#SBC #$07
        0xAA,		 	#TAX
        0xA9, 0x01,	 	#LDA #$01

        0xE0, 0x00,	0x00, 	#CPX #$0000
        0xF0, 0x04,	 	#BEQ ex1

        0x0A,		 	#ASL
        0xCA,		 	#DEX
        0x80, 0xF7,	 	#BRA lp1

        0x0D, 0x14, 0x1A, #ORA $1A14
        0x8D, 0x14, 0x1A, #STA $1A14
        0xFA,		 	#PLX
        0x7A,           #PLY
        0x28,		 	#PLP
        0x6B		 	#RTL
    ])
OFFERING_LOCS = bytearray([
        0x08, 	        #	PHP
        0x5A,           #   PHY
        0xDA, 	        #	PHX
        0x48, 	        #	PHA
        0xE2, 0x10, 	#	SEP #$10 ;8bit XY

        0x38, 	        #	SEC
        0xE9, 0x10, 	#	SBC #$10
        0xAA, 	        #	TAX ;X = Item ID check offset
        0xAC, 0x41, 0x03, #	LDY $0341 ;Y = Current Town
        0xA9, 0x01, 	#	LDA #$01

                        #	lp1:
        0x88, 	        #	DEY
        0xC0, 0x00, 	#	CPY #$00
        0xF0, 0x03, 	#	BEQ ex1
        0x0A, 	        #	ASL
        0x80, 0xF8, 	#	BRA lp1
                        #	ex1:
        0x1D, 0x16, 0x1A, #	ORA $1A16, X
        0x9D, 0x16, 0x1A, #	STA $1A16, X
           	
        0xC2, 0x10, 	#	REP #$10 ;16bit XY
        0x68, 	        #	PLA
        0xFA, 	        #	PLX
        0x7A, 	        #	PLY
        0x28, 	        #	PLP
        0x6B,	        #	RTL


    ])
LIFE_LOCS = bytearray([
        0xA9, 0x01,         # LDA #$01
        0xAC, 0x41, 0x03,   # LDY $0341
        0x88,               # DEY
        0xF0, 0x03,         # BEQ $1F8779
        0x0A,               # ASL
        0x80, 0xFA,         # BRA $1F8773
        0x0D, 0x1B, 0x1A,   # ORA $1A1B
        0x8D, 0x1B, 0x1A,   # STA $1A1B
        0x6B                # RTL
    ])
MAGIC_ITEM_LOCS = bytearray([
        0x08, 	            # PHP
        0xDA, 	            # PHX
        0xC2, 0x20, 	    # REP #$20
        0x29, 0xFF, 0x00, 	# AND #$00FF
        0xAA, 	            # TAX
        0xE2, 0x20, 	    # SEP #$20
        0xA9, 0x01, 	    # LDA #$01
        0xCA, 	            # DEX
        0xF0, 0x03, 	    # BEQ $1F8792
        0x0A, 	            # ASL
        0x80, 0xFA, 	    # BRA $1F878C
        0x0D, 0x12, 0x1A, 	# ORA $1A12
        0x8D, 0x12, 0x1A, 	# STA $1A12
        0xFA, 	            # PLX
        0x28, 	            # PLP
        0x6B 	            # RTL
    ])
CIV_LEVEL_LOCS = bytearray([
        0x48, 
        0xDA, 
        0xE2, 0x30, 
        0x8B, 
        0xA9, 0x7E, 
        0x48, 
        0xAB, 
        0xAE, 0x41, 0x03, 
        0xA9, 0x01, 
        0xE0, 0x00, 
        0xF0, 0x04, 
        0x0A, 
        0xCA, 
        0x80, 0xF8, 
        0x8D, 0x0E, 0x1A, 
        0xAD, 0x28, 0x1A, 
        0x2D, 0x0E, 0x1A, 
        0xD0, 0x0B, 
        0xAD, 0x0E, 0x1A, 
        0x0D, 0x28, 0x1A, 
        0x8D, 0x28, 0x1A, 
        0x80, 0x09, 
        0xAD, 0x0E, 0x1A, 
        0x0D, 0x29, 0x1A, 
        0x8D, 0x29, 0x1A, 
        0xAB, 
        0xC2, 0x30, 
        0xFA, 
        0x68, 
        0x6B
        ])

ACTION_STAGE_LOCS = bytearray([
        0x48, 	#	  PHA
        0xBD, 0x02, 0x00, 	#	  LDA $0002,X
        0x8D, 0x22, 0x1A, 	#	  STA $1A22
        0xBD, 0x04, 0x00, 	#	  LDA $0004,X
        0x8D, 0x24, 0x1A, 	#	  STA $1A24
        0xA5, 0x18, 	#	  LDA $18
        0x8D, 0x20, 0x1A, 	#	  STA $1A20
        0x68, 	#	  PLA
        0x18, 	#	  CLC
        0x69, 0x00, 0xA0, 	#	  ADC #$A000
        0x6B,	#	  RTL
    ])

MAX_POP_LOCS = bytearray([
        0x9F, 0x28, 0x02, 0x00, 	#	  STA $000228,X
        0xC9, 0x05, 	#	CMP #$05
        0x90, 0x17, 	#	BCC return
            #	
        0xDA, 	#	PHX
        0x48, 	#	PHA
        0xA9, 0x01, 	#	LDA #$01
            #	lp1:
        0xE0, 0x00, 0x00, 	#	CPX #$0000
        0xF0, 0x04, 	#	BEQ ex1
        0x0A, 	#	ASL
        0xCA, 	#	DEX
        0x80, 0xF7, 	#	BRA lp1
            #	ex1:
        0x0F, 0x27, 0x1A, 0x7E, 	#	ORA $1A27
        0x8F, 0x27, 0x1A, 0x7E, 	#	STA $1A27
        0x68, 	#	PLA
        0xFA, 	#	PLX
            #	return:
        0x6B,	#	RTL
    ])

AP_INIT = bytearray([

        0xAF, 0x04, 0x80, 0x1F,
        0xF0, 0x1A,
        0xA2, 0x0A, 0x00,

        0x9F, 0x18, 0x6B, 0x7F,
        0xF0, 0x04,
        0xCA,
        0xCA,
        0x80, 0xF6,

        0xA9, 0x60,
        0xA2, 0x16, 0x00,

        0x9D, 0xB3, 0x02,
        0xF0, 0x03,
        0xCA,
        0x80, 0xF8,

        0xA9, 0x01,
        0x8D, 0x40, 0x1A,
        0x8D, 0x45, 0x1A,
        0xA2, 0x0A, 0x00,

        0x9D, 0x2E, 0x02,
        0xF0, 0x04,
        0xCA,
        0xCA,
        0x80, 0xF7,
        0x22, 0x20, 0x84, 0x1F ,
        0x22, 0x22, 0xA6, 0x02,
        0x6B,
     ])
SAVE_ITEM = bytearray([
        0x48, 	#	  PHA
        0xE2, 0x20, 	#	  SEP #$20
        0xA2, 0x70, 0x00, 	#	  LDX #$70

        0xBF, 0x00, 0x1A, 0x7E, 	#	  LDA $7E1A00, X
        0x9F, 0x00, 0x20, 0x70, 	#	  STA $702000, X
        0xCA, 	#	  DEX
        0x10, 0xF5, 	#	  BPL lp1

        0xA9, 0x00, 	#	  LDA #$00
        0x8F, 0xFF, 0x1F, 0x70, 	#	  STA $701FFF
        0xC2, 0x20, 	#	  REP #$20
        0x68, 	#	  PLA
        0x64, 0x14, 	#	  STZ $14
        0x64, 0x16, 	#	  STZ $16
        0x6B, 	#	  RTL

    ])
LOAD_ITEM = bytearray([
        0x8F, 0x20, 0x00, 0x00, 	#	  STA $000020
        0x48, 	#	  PHA
        0xDA, 	#	  PHX
        0xAF, 0xFF, 0x1F, 0x70, 	#	  LDA $701FFF
        0xD0, 0x0F, 	#	  BNE exit
        0xEA, 	#	  NOP
        0xA2, 0x70, 0x00, 	#	  LDX #$0070
            #	  lp1: 
        0xBF, 0x00, 0x20, 0x70, 	#	  LDA $702000, X
        0x9F, 0x00, 0x1A, 0x7E, 	#	  STA $7E1A00, X
        0xCA, 	#	  DEX
        0x10, 0xF5, 	#	  BPL lp1
            #	  exit:
        0xFA, 	#	  PLX
        0x68, 	#	  PLA
        0x6B,	#	  RTL
    ])
STAGE_REPLAY = bytearray([
        0xE2, 0x20, 	#	  SEP #$20
        0xA5, 0xA0, 	#	  LDA $A0
        0x29, 0x20, 	#	  AND #$20 ;Will Be 0 if L isn't held, 
        0xF0, 0x0F, 	#	  BEQ bra_playAct1
        0xBD, 0x05, 0x02, 	#	  LDA $0205,X
        0xF0, 0x78, 	#	  BEQ $018759
        0xA9, 0x01, 	#	  LDA #$01
        0x80, 0x06,	#	  BRA bra_playAct1
        0xEA, 0xEA, 0xEA, 0xEA, 0xEA, 0xEA, 0xEA, # Free space
        0x8D, 0x0F, 0x1A #STA 1A0F ;Store act to $1A0F, 0 for act 1, 1 for act 2
    ])
STAGE_REPLAY2 = bytearray([
        0x22, 0xD0, 0x89, 0x1F,#  JSL $1F89D0
        0x80, 0x08, #  BRA $0284E2
        0xEA, 0xEA, 0xEA, 0xEA, 0xEA, 0xEA, 0xEA, 0xEA, #NOP padding
    ])
STAGE_START = bytearray([
        0xAD, 0xAB, 0x02,	#	  LDA $02AB
        0x18,	#	  CLC
        0x6D, 0x66, 0x1A,	#	  ADC $1A66
        0x85, 0x1C,	#	  STA $1C ;lives
        0x9C, 0x66, 0x1A, # STZ $1A66
        0x64, 0x1F,	#	  STZ $1F
        0x64, 0x20,	#	  STZ $20
        0xAD, 0x95, 0x02,	#	  LDA $0295
        0x18,	#	  CLC
        0x6D, 0x67, 0x1A,	#	  ADC $1A67
        0x85, 0x21,	#	  STA $21 ;magic
        0x9C, 0x67, 0x1A,  # STZ $1A67
        0x6B	#	  RTL
    ])
STAGE_EXIT = bytearray([
        0x22, 0x82, 0xBC, 0x02, 	#	  JSL proc_decrementStageTimer
            #	  ;8bit A 16bit XY
        0xA5, 0xA0, 	#	  LDA $A0
        0x29, 0x30, 	#	  AND #$30
        0xD0, 0x03, 	#	  BNE checksel
            #	  exit:
        0x4C, 0x10, 0x80, 	#	  JMP $8010
            #	  checksel:
        0xA5, 0xA1, 	#	  LDA $A1
        0x29, 0x20, 	#	  AND #$20
        0xF0, 0xF7, 	#	  BEQ exit
        0x64, 0x19, 	#	  STZ $19
        0x64, 0x1B, 	#	  STZ $1B
        0xA9, 0x07, 	#	  LDA #$07
        0x85, 0x1A, 	#	  STA $1A
        0x80, 0xED, 	#	  BRA exit
    ])
SCORE_LOCS = bytearray([
        0xA5, 0x1F, 	#	  LDA $1F
        0xD9, 0xB3, 0x02, 	#	  CMP $02B3,Y
        0x90, 0x03, 	#	  BCC nx1
        0x99, 0xB3, 0x02, 	#	  STA $02B3,Y ;only store the higher score
            #	  nx1:
        0xC9, 0x00, 0x10, 	#	  CMP #$1000 
            #	  ;return to this if you want to use a score table
                # ;Right now this loop doesn't actually do anything but waste CPU cycles
        0x90, 0x0E, 	#	  BCC return
        0xE2, 0x20, 	#	  SEP #$20
        0xA9, 0x01, 	#	  LDA #$01
        0xA6, 0x18, 	#	  LDX $18
            #	  lp1:
        0xCA, 	#	  DEX
        0xF0, 0x03, 	#	  BEQ ex1
        0x0A, 	#	  ASL
        0x80, 0xFA, 	#	  BRA lp1
            #	  ex1:
        0xC2, 0x20, 	#	  REP #$20
            #	  return:
        0x6B,	#	  RTL

    ])
GOAL_TYPE_CHECK = bytearray([
        0x08, 	#	PHP
        0x8B, 	#	PHB
        0xE2, 0x20, 	#	SEP #$20
        0xA9, 0x1F, 	#	LDA #$1F
        0x48, 	#	PHA
        0xAB, 	#	PLB
        0xAD, 0x2F, 0x1A, 	#	LDA $1A2F
        0xF0, 0x2A, 	#	BEQ return
            #	
        0xAD, 0x0B, 0x80, 	#	LDA $800B
        0x18, 	#	CLC
        0x6D, 0x0C, 0x80, 	#	ADC $800C
        0xCD, 0x2F, 0x1A, 	#	CMP $1A2F
        0xD0, 0x1E, 	#	BNE return
            #	
        0xAD, 0x0A, 0x80, 	#	LDA $800A
        0xF0, 0x14, 	#	BEQ notanzra
            #	tanzra:
        0xAD, 0x2C, 0x1A, 	#	LDA $1A2C
        0xD0, 0x14, 	#	BNE return
            #	
        0xAF, 0x01, 0x91, 0x7F, 	#	LDA $7F9101
        0x09, 0x03, 	#	ORA #$03
        0x8F, 0x01, 0x91, 0x7F, 	#	STA $7F9101
        0xEE, 0x2C, 0x1A, 	#	INC $1A2C
        0x80, 0x05, 	#	BRA return
            #	
            #	notanzra:
        0xA9, 0x07, 	#	LDA #$07
        0x8D, 0x47, 0x03, 	#	STA $0347 ;Beat game
            #	
            #	return:
        0xAB, 	#	PLB
        0x28, 	#	PLP
        0x60,	#	RTS

    ])

DHEIM_CLEAR = bytearray([
        0xE2, 0x20, 	#	SEP #$20
        0xA9, 0x01, 	#	LDA #$01
        0x0D, 0x2F, 0x1A, 	#	ORA $1A26
        0x8D, 0x2F, 0x1A, 	#	STA $1A26
        0xC2, 0x20, 	#	REP #$20
        0xA9, 0xF0, 0x00, 	#	LDA #$00F0
        0x60,	#	RTS
    ])

POP_GOAL = bytearray([
        0x8F, 0x18, 0x02, 0x00, 	#	  STA $000218
        0xCF, 0x08, 0x80, 0x1F,	#	  CMP $1F8008
        0x90, 0x13, 	#	  BCC return
            #	  
        0x48, 	#	  PHA
        0xE2, 0x20, 	#	  SEP #$20
        0xA9, 0x02, 	#	  LDA #$02
        0x0F, 0x2F, 0x1A, 0x7E, 	#	  ORA $1A26
        0x8F, 0x2F, 0x1A, 0x7E, 	#	  STA $1A26 ;AP clear check
        0x20, 0xC0, 0x83, # JSR $83C0
        #0xA9, 0x07, 	#	  LDA #07
        #0x8F, 0x47, 0x03, 0x7E, 	#	  STA $0347 ;Beat game
        0xC2, 0x20, 	#	  REP #$20
        0x68, 	#	  PLA
            #	  return:
            #	  
        0x6B,	#	  RTL
    ])

FERT_ITEM_1 = bytearray([
        0x22, 0xC0, 0x82, 0x1F, # JSL $1F82C0
        0x60,# RTS
        0x44,# Dog Icon
        0x46,0x65,0x72,0x74,0x69,0x6C,0x69,0x74,0x79, # "Fertility"
        0x00])
FERT_ITEM_2 = bytearray([
        0x08,	#	  PHP
        0xC2,0x20, # REP #$20
        0xA9,0x00,0x00, # LDA #$0000
        0xE2,0x20,	#	  SEP #$20
        0xA9,0x0F,	#	  LDA #$0F
        0x02,0x00,	#	  COP #$00
        0x28,	#	  PLP
        0x20,0x90,0x82,	#	  JSR $8290
        0xA9,0x11, # LDA #$00
        0x20, 0xE0, 0x82, # JSR $82E0
        0xA9, 0x00, # LDA #$00
        0x99, 0x00, 0x00, # STA $0000,Y
        0x6B,	#	  RTL
    ])
FERT_ITEM_3 = bytearray([
        0xA0, 0xA2, 0x02, 	#	  LDY #$02A2
        0x85, 0x00, 	#	  STA $00
        0xA9, 0x08, 	#	  LDA #$08
        0x85, 0x0C, 	#	  STA $0C
            #	  loop:
        0xB9, 0x00, 0x00, 	#	  LDA $0000,Y
        0xC5, 0x00, 	#	  CMP $00
        0xD0, 0x02, 	#	  BNE next
        0x18, 	#	  CLC
        0x60, 	#	  RTS
            #	  next:
        0xC8, 	#	  INY
        0xC6, 0x0C, 	#	  DEC $0C
        0xD0, 0xF2, 	#	  BNE loop
        0x38, 	#	  SEC
        0x60, 	#	  RTS

    ])
LEVEL_TEXT = bytearray([
        0x05, 0x06, 0x0D,
        0x48, 0x6F, 0x6C, 0x64, 0x40, 0x4C, 0x40, 0x85, 0x70, 0x6C, 0x61, 0x79, 0x40, 0x61, 0x63, 0x74, 0x40, 0x32, 0x0D, 
        0x4C, 0x40, 0x52, 0x40, 0x73, 0x65, 0x6C, 0x65, 0x63, 0x74, 0x40, 0x85, 0x65, 0x78, 0x69, 0x74, 0x40, 0x40, 0x40
    ])
ITEM_TEXT = bytearray([
        #00 Clear Text
        0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
        0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00,
        #01 Magical Fire
        0x43, 0x61, 0x6E, 0x40, 0x4E, 0x6F, 0x77, 0x40, 0x43, 0x61, 0x73, 0x74, 0x40, 0x46, 0x69, 0x72,
        0x65, 0x21, 0x40, 0x40, 0x40, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00,
        #02 Magical Stardust
        0x43, 0x61, 0x6E, 0x40, 0x4E, 0x6F, 0x77, 0x40, 0x43, 0x61, 0x73, 0x74, 0x40, 0x53, 0x74, 0x61,
        0x72, 0x64, 0x75, 0x73, 0x74, 0x21, 0x40, 0x40, 0x40, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00,
        #03 Magical Aura
        0x43, 0x61, 0x6E, 0x40, 0x4E, 0x6F, 0x77, 0x40, 0x43, 0x61, 0x73, 0x74, 0x40, 0x41, 0x75, 0x72,
        0x61, 0x21, 0x40, 0x40, 0x40, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00,
        #04 Magical Light
        0x43, 0x61, 0x6E, 0x40, 0x4E, 0x6F, 0x77, 0x40, 0x43, 0x61, 0x73, 0x74, 0x40, 0x4C, 0x69, 0x67,
        0x68, 0x74, 0x21, 0x40, 0x40, 0x40, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00,
        #05 Source of Life
        0x41, 0x72, 0x65, 0x40, 0x42, 0x6C, 0x65, 0x73, 0x73, 0x65, 0x64, 0x40, 0x57, 0x69, 0x74, 0x68,
        0x40, 0x4C, 0x69, 0x66, 0x65, 0x40, 0x40, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00,
        #06 Source of Magic
        0x41, 0x72, 0x65, 0x40, 0x42, 0x6C, 0x65, 0x73, 0x73, 0x65, 0x64, 0x40, 0x57, 0x69, 0x74, 0x68,
        0x40, 0x4D, 0x61, 0x67, 0x69, 0x63, 0x40, 0x40, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00,
        #07 Bread
        0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x40, 0x42, 0x72, 0x65, 0x61, 0x64, 0x20, 0x20,
        0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00,
        #08 Wheat
        0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x20, 0x57, 0x68, 0x65, 0x61, 0x74, 0x20, 0x20,
        0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00,
        #09 Herb
        0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x20, 0x48, 0x65, 0x72, 0x62, 0x73, 0x20, 0x20,
        0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00,
        #0A Bridge
        0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x20, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x20,
        0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00,
        #0B Music
        0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x20, 0x4D, 0x75, 0x73, 0x69, 0x63, 0x20, 0x20,
        0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00,
        #0C Fake Ancient Tablet
        0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x20, 0x42, 0x61, 0x64, 0x40, 0x54, 0x61, 0x62,
        0x6C, 0x65, 0x74, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00,
        #0D Ancient Tablet
        0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x20, 0x41, 0x6E, 0x63, 0x69, 0x65, 0x6E, 0x74,
        0x40, 0x54, 0x61, 0x62, 0x6C, 0x65, 0x74, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00,
        #0E Magic Skull
        0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x20, 0x4D, 0x61, 0x67, 0x69, 0x63, 0x40, 0x53,
        0x6B, 0x75, 0x6C, 0x6C, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00,
        #0F Fleece
        0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x20, 0x46, 0x6C, 0x65, 0x65, 0x63, 0x65, 0x20,
        0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00,
        #10 Fake Bomb
        0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x20, 0x46, 0x61, 0x6B, 0x65, 0x40, 0x42, 0x6F,
        0x6D, 0x62, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00,
        #11 Fertility
        0x43, 0x61, 0x6E, 0x40, 0x42, 0x6F, 0x6F, 0x73, 0x74, 0x40, 0x4F, 0x75, 0x72, 0x40, 0x50, 0x65,
        0x6F, 0x70, 0x6C, 0x65, 0x21, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00,
        #12 Bomb
        0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x20, 0x42, 0x6F, 0x6D, 0x62, 0x20, 0x20, 0x20,
        0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00,
        #13 Compass
        0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x20, 0x43, 0x6F, 0x6D, 0x70, 0x61, 0x73, 0x73,
        0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00,
        #14 Strength of Angel
        0x47, 0x6F, 0x74, 0x40, 0x53, 0x74, 0x72, 0x65, 0x6E, 0x67, 0x74, 0x68, 0x40, 0x4F, 0x66, 0x40,
        0x41, 0x6E, 0x67, 0x65, 0x6C, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00,
        #15 Level Up
        0x4C, 0x65, 0x76, 0x65, 0x6C, 0x65, 0x64, 0x40, 0x55, 0x70, 0x40, 0x54, 0x6F, 0x40, 0x09, 0x02,
        0x91, 0x02, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00,
        #16 Apple
        0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x20, 0x41, 0x70, 0x70, 0x6C, 0x65, 0x20, 0x20,
        0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00,
        #17 Flame Sword
        0x45, 0x6E, 0x63, 0x68, 0x61, 0x6E, 0x74, 0x65, 0x64, 0x40, 0x4F, 0x75, 0x72, 0x40, 0x53, 0x77,
        0x6F, 0x72, 0x64, 0x21, 0x40, 0x40, 0x40, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00,
        #18 Fillmore Advancement
        0x41, 0x64, 0x76, 0x61, 0x6E, 0x63, 0x65, 0x64, 0x40, 0x46, 0x69, 0x6C, 0x6C, 0x6D, 0x6F, 0x72,
        0x65, 0x20, 0x6C, 0x76, 0x20, 0x09, 0x01, 0x2E, 0x02, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00,
        #19 Bloodpool Advancement
        0x41, 0x64, 0x76, 0x61, 0x6E, 0x63, 0x65, 0x64, 0x40, 0x42, 0x6C, 0x6F, 0x6F, 0x64, 0x70, 0x6F,
        0x6F, 0x6C, 0x40, 0x6C, 0x76, 0x20, 0x09, 0x01, 0x30, 0x02, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00,
        #1A Kasandora Advancement
        0x41, 0x64, 0x76, 0x61, 0x6E, 0x63, 0x65, 0x64, 0x40, 0x4B, 0x61, 0x73, 0x61, 0x6E, 0x64, 0x6F,
        0x72, 0x61, 0x40, 0x6C, 0x76, 0x20, 0x09, 0x01, 0x32, 0x02, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00,
        #1B Aitos Advancement
        0x41, 0x64, 0x76, 0x61, 0x6E, 0x63, 0x65, 0x64, 0x40, 0x41, 0x69, 0x74, 0x6F, 0x73, 0x40, 0x6C,
        0x76, 0x20, 0x09, 0x01, 0x34, 0x02, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00,
        #1C Mahawa Advancement
        0x41, 0x64, 0x76, 0x61, 0x6E, 0x63, 0x65, 0x64, 0x40, 0x4D, 0x61, 0x72, 0x61, 0x68, 0x6E, 0x61,
        0x40, 0x6C, 0x76, 0x40, 0x20, 0x09, 0x01, 0x36, 0x02, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00,
        #1D Northwall Advancement
        0x41, 0x64, 0x76, 0x61, 0x6E, 0x63, 0x65, 0x64, 0x40, 0x4E, 0x6F, 0x72, 0x74, 0x68, 0x77, 0x61,
        0x6C, 0x6C, 0x40, 0x6C, 0x76, 0x40, 0x09, 0x01, 0x38, 0x02, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00,
        #1E Progressive Arrow
        0x50, 0x6F, 0x77, 0x65, 0x72, 0x65, 0x64, 0x40, 0x55, 0x70, 0x40, 0x41, 0x72, 0x72, 0x6F, 0x77,
        0x73, 0x40, 0x6C, 0x76, 0x20, 0x09, 0x02, 0x45, 0x1A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00,
        #1F Dheim Crystal
        0x47, 0x6F, 0x74, 0x40, 0x44, 0x68, 0x65, 0x69, 0x6D, 0x40, 0x43, 0x72, 0x79, 0x73, 0x74, 0x61,
        0x6C, 0x40, 0x09, 0x02, 0x48, 0x1A, 0x2F, 0x09, 0x02, 0x06, 0x80, 0x20, 0x20, 0x20, 0x20, 0x00,
        #20 Lightning
        0x43, 0x61, 0x6E, 0x40, 0x4E, 0x6F, 0x77, 0x40, 0x53, 0x74, 0x72, 0x69, 0x6B, 0x65, 0x40, 0x4C,
        0x69, 0x67, 0x68, 0x74, 0x6E, 0x69, 0x6E, 0x67, 0x21, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00,
        #21 Rain
        0x43, 0x61, 0x6E, 0x40, 0x4E, 0x6F, 0x77, 0x40, 0x4D, 0x61, 0x6B, 0x65, 0x40, 0x52, 0x61, 0x69,
        0x6E, 0x40, 0x46, 0x61, 0x6C, 0x6C, 0x21, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00,
        #22 Sun
        0x43, 0x61, 0x6E, 0x40, 0x4E, 0x6F, 0x77, 0x40, 0x53, 0x68, 0x69, 0x6E, 0x65, 0x40, 0x54, 0x68,
        0x65, 0x40, 0x53, 0x75, 0x6E, 0x21, 0x40, 0x40, 0x40, 0x40, 0x40, 0x20, 0x20, 0x20, 0x20, 0x00,
        #23 Wind
        0x43, 0x61, 0x6E, 0x40, 0x4E, 0x6F, 0x77, 0x40, 0x42, 0x6C, 0x6F, 0x77, 0x40, 0x54, 0x68, 0x65,
        0x40, 0x57, 0x69, 0x6E, 0x64, 0x73, 0x21, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00,
        #24 Earthquake
        0x43, 0x61, 0x6E, 0x40, 0x4E, 0x6F, 0x77, 0x40, 0x43, 0x61, 0x75, 0x73, 0x65, 0x40, 0x51, 0x75,
        0x61, 0x6B, 0x65, 0x73, 0x21, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x20, 0x00,
        #25 1UP
        0x48, 0x61, 0x76, 0x65, 0x40, 0x4D, 0x6F, 0x72, 0x65, 0x40, 0x4C, 0x69, 0x66, 0x65, 0x40, 0x40,
        0x40, 0x40, 0x40, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00,
        #26 1000 Points
        0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x40, 0x31, 0x30, 0x30, 0x30, 0x40, 0x50, 0x6F,
        0x69, 0x6E, 0x74, 0x73, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00,
        #27 Magic
        0x48, 0x61, 0x76, 0x65, 0x40, 0x4D, 0x6F, 0x72, 0x65, 0x40, 0x4D, 0x61, 0x67, 0x69, 0x63, 0x40,
        0x40, 0x40, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00,
        #28 Smite
        0x53, 0x6D, 0x69, 0x74, 0x65, 0x64, 0x40, 0x4F, 0x75, 0x72, 0x40, 0x45, 0x6E, 0x65, 0x6D, 0x69,
        0x65, 0x73, 0x40, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00,
        #29 Population Boom
        0x41, 0x72, 0x65, 0x40, 0x54, 0x68, 0x72, 0x69, 0x76, 0x69, 0x6E, 0x67, 0x40, 0x40, 0x40, 0x40,
        0x40, 0x40, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00,
        #2A Savior
        0x59, 0x6F, 0x75, 0x40, 0x41, 0x72, 0x65, 0x40, 0x54, 0x68, 0x65, 0x40, 0x53, 0x61, 0x76, 0x69,
        0x6F, 0x72, 0x21, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00,
        #2B Prosperity
        0x48, 0x61, 0x76, 0x65, 0x40, 0x4D, 0x61, 0x64, 0x65, 0x40, 0x54, 0x68, 0x65, 0x40, 0x57, 0x6F,
        0x72, 0x6C, 0x64, 0x40, 0x6F, 0x75, 0x73, 0x21, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00,
        #2C
        0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
        0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00,
        #2D
        0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
        0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00,
        #2E
        0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
        0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00,
        #2F
        0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
        0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00,
        #30 Skull Trap
        0x41, 0x72, 0x65, 0x40, 0x43, 0x75, 0x72, 0x73, 0x65, 0x64, 0x40, 0x57, 0x69, 0x74, 0x68, 0x40,
        0x53, 0x6B, 0x75, 0x6C, 0x6C, 0x73, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00,
        #31 Redirection Trap
        0x53, 0x65, 0x65, 0x6D, 0x40, 0x54, 0x6F, 0x40, 0x42, 0x65, 0x40, 0x4C, 0x6F, 0x73, 0x74, 0x20,
        0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00,
        #32
        0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
        0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00,
        #33
        0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
        0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00,
        #34
        0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
        0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00,
        #35
        0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
        0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00,
        #36
        0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
        0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00,
        #37
        0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
        0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00,
    ])
ITEM_POINTERS = bytearray([
        0x00, 0x81, #00 Return
        0x30, 0x82, #01 Magical Fire
        0x30, 0x82, #02 Magical Stardust
        0x30, 0x82, #03 Magical Aura
        0x30, 0x82, #04 Magical Light
        0x18, 0x81, #05 Source of Life
        0x20, 0x81, #06 Source of Magic
        0x60, 0x82, #07 Bread
        0x60, 0x82, #08 Wheat
        0x60, 0x82, #09 Herb
        0x60, 0x82, #0A Bridge
        0x60, 0x82, #0B Music
        0x60, 0x82, #0C Ancient Tablet
        0x60, 0x82, #0D Ancient Tablet
        0x60, 0x82, #0E Magic Skull
        0x60, 0x82, #0F Fleece
        0x60, 0x82, #10 Bomb
        0x60, 0x82, #11 Fertility
        0x60, 0x82, #12 Bomb (Real)
        0x60, 0x82, #13 Compass
        0x60, 0x82, #14 Strength of Angel
        0x47, 0x81, #15 Level Up
        0x72, 0x81, #16 Apple
        0x41, 0x81, #17 Flame Sword
        0x98, 0x81, #18 Fillmore Advancement
        0x98, 0x81, #19 Bloodpool Advancement
        0x98, 0x81, #1A Kasandora Advancement
        0x98, 0x81, #1B Aitos Advancement
        0x98, 0x81, #1C Mahawa Advancement
        0x98, 0x81, #1D Northwall Advancement
        0x12, 0x81, #1E Progressive Arrow
        0xB0, 0x81, #1F Dheim Crystal
        0x80, 0x81, #20 Lightning
        0x80, 0x81, #21 Rain
        0x80, 0x81, #22 Sun
        0x80, 0x81, #23 Wind
        0x80, 0x81, #24 Earthquake
        0x23, 0x82, #25 1UP
        0xD4, 0x81, #26 1000 Points
        0x18, 0x82, #27 Magic
        0x00, 0x8A, #28 Smite
        0x90, 0x82, #29 Population Boom
        0x00, 0x81, #2A Savior
        0x00, 0x81, #2B Prosperity
        0x00, 0x81, #2C
        0x00, 0x81, #2D
        0x00, 0x81, #2E
        0x00, 0x81, #2F
        0x30, 0x8A, #30 Skull Trap
        0x80, 0x89, #31 Redirection Trap
        0x00, 0x81, #32
        0x00, 0x81, #33
        0x00, 0x81, #34
        0x00, 0x81, #35
        0x00, 0x81, #36
        0x00, 0x81, #37
        ])

APICON_TOP = bytearray([
        0x00,0xFF,0x7B,0xFF,0x47,0xFF,0x3F,0xF9,0x7F,0xFC,0x79,0xFE,0x01,0xFE,0x58,0xE7,
        0xFF,0xFF,0x84,0xFF,0xB8,0xFF,0xC0,0xC1,0xF8,0x80,0xFA,0x86,0xC6,0xFE,0xA7,0xE7,
        0x00,0xFF,0xDE,0xFF,0xE2,0xFF,0xE0,0x9F,0xDE,0x3F,0xBE,0x7F,0x9C,0x7F,0x1A,0xE7,
        0xFF,0xFF,0x21,0xFF,0x1D,0xFF,0x03,0x83,0x01,0x01,0x61,0x61,0x7F,0x7F,0xFD,0xE7,
    ])
APICON_BOT = bytearray([
        0x64,0xC3,0x05,0xC2,0x0E,0x80,0x04,0x88,0x00,0xC8,0x40,0xFC,0x7C,0xFE,0x00,0xFF,
        0x9B,0xC3,0xFA,0xC3,0xF0,0x87,0xF8,0x8F,0xF8,0xCF,0xBC,0xFF,0x82,0xFF,0xFF,0xFF,
        0x26,0xDB,0x80,0x7F,0x60,0x1F,0x20,0x1F,0x00,0x1F,0x02,0x3F,0x3E,0x7F,0x00,0xFF,
        0xFD,0xC3,0x7F,0xC3,0x1F,0xE1,0x1F,0xF1,0x1F,0xF3,0x3D,0xFF,0x41,0xFF,0xFF,0xFF,
    ])
FERTICON_TOP = bytearray([
        0x00,0xFF,0x7F,0xFF,0x40,0xFF,0x5F,0xE0,0x5F,0xE0,0x59,0xE0,0x59,0xE0,0x58,0xF1,
        0xFF,0xFF,0x80,0xFF,0xBF,0xFF,0xA0,0xE0,0xA0,0xE0,0xA6,0xE6,0xA0,0xE6,0xB9,0xF6,
        0x00,0xFF,0xFE,0xFF,0x02,0xFF,0xFA,0x07,0x9A,0x07,0x9A,0x07,0xEA,0x17,0x8A,0x6F,
        0xFF,0xFF,0x01,0xFF,0xFD,0xFF,0x05,0x07,0x05,0x67,0x05,0x67,0x95,0x67,0xED,0x1F,
    ])
FERTICON_BOT = bytearray([
        0x50,0xF7,0x59,0xF3,0x55,0xF1,0x5B,0xF3,0x58,0xF7,0x48,0xF7,0x4A,0xE5,0x00,0xFF,
        0xB7,0xF8,0xB3,0xFC,0xB9,0xF6,0xBF,0xF0,0xBF,0xF0,0xBF,0xF0,0xA5,0xFF,0xFF,0xFF,
        0x0A,0x2F,0xDA,0xCF,0xAA,0x8F,0x8A,0x1F,0x8A,0x7F,0x82,0x7F,0x52,0x27,0x00,0xFF,
        0x2D,0xDF,0xCD,0x3F,0x9D,0x6F,0xFD,0x0F,0xFD,0x0F,0xFD,0x0F,0x25,0xFF,0xFF,0xFF,
    ])
ICON_FIX = bytearray([
        0xC0, 0x4B, 0x02, # CPY #$024B
        0x90, 0x08,  # BCC exit
        0xC0, 0x81, 0x02, # CPY #$0281
        0xB0, 0x03, # BCS exit
        0xA9, 0x10, 0x00, # LDA #$0010
        0x0A,   # ASL
        0x18,   # CLC
        0x65, 0x04, # ADC $04
        0x6B    # RTL
    ])